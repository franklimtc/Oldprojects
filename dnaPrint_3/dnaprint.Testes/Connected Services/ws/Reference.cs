//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dnaprint.Testes.ws {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ws.IOperacoes")]
    public interface IOperacoes {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperacoes/Exec", ReplyAction="http://tempuri.org/IOperacoes/ExecResponse")]
        bool Exec(string key, string query, string[][] parametros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperacoes/Exec", ReplyAction="http://tempuri.org/IOperacoes/ExecResponse")]
        System.Threading.Tasks.Task<bool> ExecAsync(string key, string query, string[][] parametros);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperacoes/RetornaValor", ReplyAction="http://tempuri.org/IOperacoes/RetornaValorResponse")]
        string RetornaValor(string key, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperacoes/RetornaValor", ReplyAction="http://tempuri.org/IOperacoes/RetornaValorResponse")]
        System.Threading.Tasks.Task<string> RetornaValorAsync(string key, string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperacoes/ListarOids", ReplyAction="http://tempuri.org/IOperacoes/ListarOidsResponse")]
        dnaPrint.Base.OID[] ListarOids(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOperacoes/ListarOids", ReplyAction="http://tempuri.org/IOperacoes/ListarOidsResponse")]
        System.Threading.Tasks.Task<dnaPrint.Base.OID[]> ListarOidsAsync(string key);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOperacoesChannel : dnaprint.Testes.ws.IOperacoes, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OperacoesClient : System.ServiceModel.ClientBase<dnaprint.Testes.ws.IOperacoes>, dnaprint.Testes.ws.IOperacoes {
        
        public OperacoesClient() {
        }
        
        public OperacoesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OperacoesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OperacoesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OperacoesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Exec(string key, string query, string[][] parametros) {
            return base.Channel.Exec(key, query, parametros);
        }
        
        public System.Threading.Tasks.Task<bool> ExecAsync(string key, string query, string[][] parametros) {
            return base.Channel.ExecAsync(key, query, parametros);
        }
        
        public string RetornaValor(string key, string query) {
            return base.Channel.RetornaValor(key, query);
        }
        
        public System.Threading.Tasks.Task<string> RetornaValorAsync(string key, string query) {
            return base.Channel.RetornaValorAsync(key, query);
        }
        
        public dnaPrint.Base.OID[] ListarOids(string key) {
            return base.Channel.ListarOids(key);
        }
        
        public System.Threading.Tasks.Task<dnaPrint.Base.OID[]> ListarOidsAsync(string key) {
            return base.Channel.ListarOidsAsync(key);
        }
    }
}
